% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/select-fields.R
\name{SelPoint}
\alias{SelPoint}
\title{Select nearest point}
\usage{
SelPoint(data, lat, lon, simplify = TRUE, verbose = FALSE)
}
\arguments{
\item{data}{a \code{"pField"} object.}

\item{lat}{the latitude of the requested point.}

\item{lon}{the longitude of the requested point.}

\item{simplify}{logical; if \code{TRUE} (the default) the result will be
simplified to a \code{"pTs"} object, otherwise it will be a \code{"pField"}
object with only one spatial dimension.}

\item{verbose}{if \code{TRUE}, print a message with the requested and
nearest found coordinates. Defaults to \code{FALSE}.}
}
\value{
a \code{"pTs"} or \code{"pField"} (if \code{simplify = FALSE})
object with the time series at the grid point nearest to the requested
point.
}
\description{
Select the timeseries from a \code{"pField"} object at the grid point
nearest to a given pair of latitude and longitude values.
}
\details{
This is a function in development; the current method to find the nearest
grid point is to minimise the root mean square deviation between the
position vectors in spherical coordinates of the requested point and all
observation points in the \code{"pField"} object, which is done by calling
\code{\link[geostools]{MinimizeSpherical}}. In the future, a different
method may be implemented for this. Note that requested lat/lon values
outside the range of grid points in \code{data} will be processed with a
warning.
}
\examples{
# Create some empty pField object
lat <- seq(-75, -80, -5)
lon <- c(0, 135, 215)
time <- 1 : 4

x <- pField(lat = lat, lon = lon, time = time)

# Extract grid point nearest to lat = -80, lon = 200:
SelPoint(x, lat = -80, lon = 200, verbose = TRUE)
SelPoint(x, lat = -80, lon = 200, simplify = FALSE, verbose = TRUE)
}
\author{
Thomas MÃ¼nch
}
